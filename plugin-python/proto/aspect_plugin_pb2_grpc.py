# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto import aspect_plugin_pb2 as proto_dot_aspect__plugin__pb2


class PluginStub(object):
    """Plugin is the service used by the Core to communicate with a Plugin instance.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.BEPEventCallback = channel.unary_unary(
                '/proto.Plugin/BEPEventCallback',
                request_serializer=proto_dot_aspect__plugin__pb2.BEPEventCallbackReq.SerializeToString,
                response_deserializer=proto_dot_aspect__plugin__pb2.BEPEventCallbackRes.FromString,
                )
        self.CustomCommands = channel.unary_unary(
                '/proto.Plugin/CustomCommands',
                request_serializer=proto_dot_aspect__plugin__pb2.CustomCommandsReq.SerializeToString,
                response_deserializer=proto_dot_aspect__plugin__pb2.CustomCommandsRes.FromString,
                )
        self.ExecuteCustomCommand = channel.unary_unary(
                '/proto.Plugin/ExecuteCustomCommand',
                request_serializer=proto_dot_aspect__plugin__pb2.ExecuteCustomCommandReq.SerializeToString,
                response_deserializer=proto_dot_aspect__plugin__pb2.ExecuteCustomCommandRes.FromString,
                )
        self.PostBuildHook = channel.unary_unary(
                '/proto.Plugin/PostBuildHook',
                request_serializer=proto_dot_aspect__plugin__pb2.PostBuildHookReq.SerializeToString,
                response_deserializer=proto_dot_aspect__plugin__pb2.PostBuildHookRes.FromString,
                )
        self.PostTestHook = channel.unary_unary(
                '/proto.Plugin/PostTestHook',
                request_serializer=proto_dot_aspect__plugin__pb2.PostTestHookReq.SerializeToString,
                response_deserializer=proto_dot_aspect__plugin__pb2.PostTestHookRes.FromString,
                )
        self.PostRunHook = channel.unary_unary(
                '/proto.Plugin/PostRunHook',
                request_serializer=proto_dot_aspect__plugin__pb2.PostRunHookReq.SerializeToString,
                response_deserializer=proto_dot_aspect__plugin__pb2.PostRunHookRes.FromString,
                )
        self.Setup = channel.unary_unary(
                '/proto.Plugin/Setup',
                request_serializer=proto_dot_aspect__plugin__pb2.SetupReq.SerializeToString,
                response_deserializer=proto_dot_aspect__plugin__pb2.SetupRes.FromString,
                )


class PluginServicer(object):
    """Plugin is the service used by the Core to communicate with a Plugin instance.
    """

    def BEPEventCallback(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CustomCommands(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExecuteCustomCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostBuildHook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostTestHook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostRunHook(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Setup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PluginServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'BEPEventCallback': grpc.unary_unary_rpc_method_handler(
                    servicer.BEPEventCallback,
                    request_deserializer=proto_dot_aspect__plugin__pb2.BEPEventCallbackReq.FromString,
                    response_serializer=proto_dot_aspect__plugin__pb2.BEPEventCallbackRes.SerializeToString,
            ),
            'CustomCommands': grpc.unary_unary_rpc_method_handler(
                    servicer.CustomCommands,
                    request_deserializer=proto_dot_aspect__plugin__pb2.CustomCommandsReq.FromString,
                    response_serializer=proto_dot_aspect__plugin__pb2.CustomCommandsRes.SerializeToString,
            ),
            'ExecuteCustomCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecuteCustomCommand,
                    request_deserializer=proto_dot_aspect__plugin__pb2.ExecuteCustomCommandReq.FromString,
                    response_serializer=proto_dot_aspect__plugin__pb2.ExecuteCustomCommandRes.SerializeToString,
            ),
            'PostBuildHook': grpc.unary_unary_rpc_method_handler(
                    servicer.PostBuildHook,
                    request_deserializer=proto_dot_aspect__plugin__pb2.PostBuildHookReq.FromString,
                    response_serializer=proto_dot_aspect__plugin__pb2.PostBuildHookRes.SerializeToString,
            ),
            'PostTestHook': grpc.unary_unary_rpc_method_handler(
                    servicer.PostTestHook,
                    request_deserializer=proto_dot_aspect__plugin__pb2.PostTestHookReq.FromString,
                    response_serializer=proto_dot_aspect__plugin__pb2.PostTestHookRes.SerializeToString,
            ),
            'PostRunHook': grpc.unary_unary_rpc_method_handler(
                    servicer.PostRunHook,
                    request_deserializer=proto_dot_aspect__plugin__pb2.PostRunHookReq.FromString,
                    response_serializer=proto_dot_aspect__plugin__pb2.PostRunHookRes.SerializeToString,
            ),
            'Setup': grpc.unary_unary_rpc_method_handler(
                    servicer.Setup,
                    request_deserializer=proto_dot_aspect__plugin__pb2.SetupReq.FromString,
                    response_serializer=proto_dot_aspect__plugin__pb2.SetupRes.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'proto.Plugin', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Plugin(object):
    """Plugin is the service used by the Core to communicate with a Plugin instance.
    """

    @staticmethod
    def BEPEventCallback(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.Plugin/BEPEventCallback',
            proto_dot_aspect__plugin__pb2.BEPEventCallbackReq.SerializeToString,
            proto_dot_aspect__plugin__pb2.BEPEventCallbackRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CustomCommands(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.Plugin/CustomCommands',
            proto_dot_aspect__plugin__pb2.CustomCommandsReq.SerializeToString,
            proto_dot_aspect__plugin__pb2.CustomCommandsRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExecuteCustomCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.Plugin/ExecuteCustomCommand',
            proto_dot_aspect__plugin__pb2.ExecuteCustomCommandReq.SerializeToString,
            proto_dot_aspect__plugin__pb2.ExecuteCustomCommandRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PostBuildHook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.Plugin/PostBuildHook',
            proto_dot_aspect__plugin__pb2.PostBuildHookReq.SerializeToString,
            proto_dot_aspect__plugin__pb2.PostBuildHookRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PostTestHook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.Plugin/PostTestHook',
            proto_dot_aspect__plugin__pb2.PostTestHookReq.SerializeToString,
            proto_dot_aspect__plugin__pb2.PostTestHookRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PostRunHook(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.Plugin/PostRunHook',
            proto_dot_aspect__plugin__pb2.PostRunHookReq.SerializeToString,
            proto_dot_aspect__plugin__pb2.PostRunHookRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Setup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.Plugin/Setup',
            proto_dot_aspect__plugin__pb2.SetupReq.SerializeToString,
            proto_dot_aspect__plugin__pb2.SetupRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class PrompterStub(object):
    """Prompter is the service used by the Plugin instances to request prompt
    actions to the Core from the CLI users.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Run = channel.unary_unary(
                '/proto.Prompter/Run',
                request_serializer=proto_dot_aspect__plugin__pb2.PromptRunReq.SerializeToString,
                response_deserializer=proto_dot_aspect__plugin__pb2.PromptRunRes.FromString,
                )


class PrompterServicer(object):
    """Prompter is the service used by the Plugin instances to request prompt
    actions to the Core from the CLI users.
    """

    def Run(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PrompterServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Run': grpc.unary_unary_rpc_method_handler(
                    servicer.Run,
                    request_deserializer=proto_dot_aspect__plugin__pb2.PromptRunReq.FromString,
                    response_serializer=proto_dot_aspect__plugin__pb2.PromptRunRes.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'proto.Prompter', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Prompter(object):
    """Prompter is the service used by the Plugin instances to request prompt
    actions to the Core from the CLI users.
    """

    @staticmethod
    def Run(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.Prompter/Run',
            proto_dot_aspect__plugin__pb2.PromptRunReq.SerializeToString,
            proto_dot_aspect__plugin__pb2.PromptRunRes.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
